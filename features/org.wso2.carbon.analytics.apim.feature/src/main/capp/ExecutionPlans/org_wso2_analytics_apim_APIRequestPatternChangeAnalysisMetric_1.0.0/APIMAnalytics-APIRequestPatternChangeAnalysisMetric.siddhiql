@Plan:name('APIMAnalytics-APIRequestPatternChangeAnalysisMetric')


@Import('org.wso2.analytics.apim.transitionStream:1.0.0')
define stream metricStream (firstState string, nextState string, consumerKey string, userid string, timestamp string);

@Export('org.wso2.analytics.apim.allApimAlertsStream:1.0.0')
define stream all_apim_alerts_stream (type string, msg string, alertTimestamp string);

@Export('org.wso2.analytics.apim.requestPatternChangedStream:1.0.0')
define stream requestPatternChangedStream (userid string, consumerKey string, message string, alertTimestamp string);


@from(eventtable = 'analytics.table' , table.name = 'MARKOVMODELTABLE', primary.keys='firstState,nextState, consumerKey', indices = 'firstState,nextState, count, probability, consumerKey')
define table MarkovModelTable (consumerKey string, firstState string, nextState string, count double, probability double);



/****************************************************** Calculate Miss Probability *******************************************************************************/
from metricStream[not((firstState == MarkovModelTable.firstState and nextState == MarkovModelTable.nextState and consumerKey == MarkovModelTable.consumerKey) in MarkovModelTable)]
select userid, timestamp, firstState , nextState, 1.0 as MissProbability, MarkovModelTable.consumerKey
insert into metricValueStream;

from metricStream as ms join MarkovModelTable
on (ms.firstState == MarkovModelTable.firstState and ms.nextState == MarkovModelTable.nextState and ms.consumerKey == MarkovModelTable.consumerKey)
select ms.userid, ms.timestamp, ms.firstState ,ms.nextState, (1- MarkovModelTable.probability) as MissProbability, MarkovModelTable.consumerKey
insert into metricValueStream;
 

/****************************************************** Normalize Miss Probability ******************************************************************************/
from metricValueStream#window.length(1)
select userid, timestamp, firstState, nextState, avg (MissProbability) as NormalizeMissProbability, consumerKey, "2016-03-01" as startAlertingDate
insert into NormalizeMissProbabilityStream;

/****************************************************** Compare Normalize Miss Probability with Threshold *******************************************************/
from NormalizeMissProbabilityStream [ NormalizeMissProbability > 0.95 and time:dateDiff(time:currentDate(),"2016-03-01",'yyyy-MM-dd','yyyy-MM-dd') >= 0]
select userid, timestamp, str:concat(firstState,' to ',nextState) as transition, NormalizeMissProbability as miss_probability, consumerKey
insert into IntermediateFraudStream;

from IntermediateFraudStream 
select userid, consumerKey, str:concat('Abnormal request pattern detected. userId :',userid,' consumerKey :',consumerKey,' suscpicious API transition: ',transition,' timestamp :',timestamp) as message,(time:currentTimestamp()) as alertTimestamp  
insert into requestPatternChangedStream;

from IntermediateFraudStream
select 'RequestPatternChanged' as type, str:concat('Abnormal request pattern detected. userId :',userid,' consumerKey :',consumerKey,' suscpicious API transition: ',transition,' timestamp :',timestamp) as msg, (time:currentTimestamp()) as alertTimestamp 
insert into all_apim_alerts_stream;